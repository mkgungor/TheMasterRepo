package us.lazerzes.citysim.test;

import static org.junit.Assert.*;

import java.util.ArrayList;

import org.junit.Test;

import static org.mockito.Mockito.*;

import us.lazerzes.citysim.driver.Driver;
import us.lazerzes.citysim.location.*;
import us.lazerzes.citysim.util.Direction;
import us.lazerzes.citysim.util.DirectionHelper;
import us.lazerzes.citysim.util.RandGen;

public class CitySimTest {

	@Test
	public void testCoffee(){
		
		Driver d = new Driver(1);
		d.setCurrentLocation(new LocationBuilding(1, 1, "Coffee"));
		
		d.checkCurrentPosition();
		
		assertEquals(d.getCoffeeCount(), 1);
		
	}
	
	@Test
	public void testNotCoffee(){
		
		Driver d = new Driver(1);
		d.setCurrentLocation(new LocationBuilding(1, 1, "Library"));
		
		d.checkCurrentPosition();
		
		assertEquals(d.getCoffeeCount(), 0);
		
	}
	
	@Test
	public void testInCityLocation(){
		Driver d = new Driver(1);
		d.setCurrentLocation(new LocationBuilding(1, 1, "Coffee"));
		
		assertTrue(d.checkCurrentPosition());
		
	}
	
	@Test
	public void testOutCityLocation(){
		Driver d = new Driver(1);
		d.setCurrentLocation(new LocationCityLimits(1, 1, "Burlington"));
		
		assertFalse(d.checkCurrentPosition());
		
	}
	
	@Test
	public void moveToOneWayStreetLegal(){
		
		LocationBuilding b = new LocationBuilding(1, 1, "House");
		LocationStreet s = new LocationStreet(2, 1, "Winooski Falls Way", true, Direction.EAST);
		
		assertTrue(DirectionHelper.isLegalMove(b, s));
		
	}
	
	@Test
	public void moveToOneWayStreetIllegal(){
		
		LocationBuilding b = new LocationBuilding(1, 1, "House");
		LocationStreet s = new LocationStreet(2, 1, "Winooski Falls Way", true, Direction.WEST);
		
		assertFalse(DirectionHelper.isLegalMove(b, s));
		
	}
	
	@Test
	public void moveToTwoWayStreetLegal(){
		
		LocationBuilding b = new LocationBuilding(1, 1, "House");
		LocationStreet s = new LocationStreet(2, 1, "Winooski Falls Way", false, Direction.WEST);
		
		assertTrue(DirectionHelper.isLegalMove(b, s));
		
	}
	
	@Test
	public void moveToTwoWayStreetIllegal(){
		
		LocationBuilding b = new LocationBuilding(1, 1, "House");
		LocationStreet s = new LocationStreet(1, 2, "Winooski Falls Way", false, Direction.WEST);
		
		assertTrue(DirectionHelper.isLegalMove(b, s));
		
	}
	
	@Test
	public void moveToBuildingIllegal(){
		
		LocationBuilding b1 = new LocationBuilding(1, 1, "Place");
		LocationBuilding b2 = new LocationBuilding(1, 2, "House");
		
		assertFalse(DirectionHelper.isLegalMove(b1, b2));
		
	}
	
	@Test
	public void moveToCityLimitsIllegal(){
		
		LocationBuilding b = new LocationBuilding(1, 1, "House");
		LocationCityLimits c = new LocationCityLimits(1, 2, "Winooski");
		
		assertFalse(DirectionHelper.isLegalMove(b, c));
		
	}
	
	@Test
	public void getVal2fromArrayList(){
		
		ArrayList<GenericLocation> arr = new ArrayList<GenericLocation>();
		
		RandGen ren = mock(RandGen.class);
		
		when(RandGen.getRandomNumber(4)).thenReturn(1);
		
	}
	
}
